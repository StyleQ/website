{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nvar textStyle = function textStyle(element) {\n  return {\n    h1: function h1() {\n      return css([\"font-size:4.2rem;color:var(--color-brand-1);line-height:1.2;@media(min-width:520px){font-size:6.4rem;}\"]);\n    },\n    h2: function h2() {\n      return css([\"font-size:2.8rem;color:var(--color-brand-1);@media(min-width:720px){font-size:4rem;}\"]);\n    },\n    h3: function h3() {\n      return css([\"font-size:3.6rem;\"]);\n    },\n    h4: function h4() {\n      return css([\"font-size:2.8rem;color:var(--color-brand-1);\"]);\n    },\n    h5: function h5() {\n      return css([\"font-size:2.2rem;color:var(--color-brand-1);\"]);\n    },\n    h6: function h6() {\n      return css([\"font-size:1.8rem;color:var(--color-brand-1);\"]);\n    },\n    p: function p() {\n      return css([\"font-size:1.8rem;\"]);\n    },\n    span: function span() {\n      return css([\"margin:0;\"]);\n    },\n    strong: function strong() {\n      return css([\"margin:0;font-weight:bolder;\"]);\n    },\n    em: function em() {\n      return css([\"margin:0;font-style:italic;\"]);\n    },\n    small: function small() {\n      return css([\"font-size:1.4rem;\"]);\n    }\n  }[element]();\n};\n\nvar Text = styled.p.withConfig({\n  displayName: \"Typography__Text\",\n  componentId: \"bjxfwk-0\"\n})([\"margin:1rem 0;line-height:1.5;\", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], function (_ref) {\n  var as = _ref.as;\n  return as && textStyle(as);\n}, function (_ref2) {\n  var transform = _ref2.transform;\n  return transform && css([\"text-transform:\", \";\"], transform);\n}, function (_ref3) {\n  var align = _ref3.align;\n  return align && css([\"text-align:\", \";\"], align);\n}, function (_ref4) {\n  var size = _ref4.size;\n  return size && css([\"font-size:\", \";\"], size);\n}, function (_ref5) {\n  var weight = _ref5.weight;\n  return weight && css([\"font-weight:\", \";\"], weight);\n}, function (_ref6) {\n  var truncate = _ref6.truncate;\n  return truncate === 'break' && css([\"word-break:break-word;\"]);\n}, function (_ref7) {\n  var truncate = _ref7.truncate;\n  return truncate === 'ellipsis' && css([\"width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\"]);\n});\nText.propTypes = {\n  as: PropTypes.string,\n  transform: PropTypes.string,\n  align: PropTypes.string\n};\nexport default Text;","map":{"version":3,"sources":["C:/Users/nike9/Documents/GitHub/website/components/Typography.jsx"],"names":["styled","css","PropTypes","textStyle","element","h1","h2","h3","h4","h5","h6","p","span","strong","em","small","Text","as","transform","align","size","weight","truncate","propTypes","string"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD;AAAA,SAAc;AAC9BC,IAAAA,EAAE,EAAE;AAAA,aAAMJ,GAAN;AAAA,KAD0B;AAS9BK,IAAAA,EAAE,EAAE;AAAA,aAAML,GAAN;AAAA,KAT0B;AAgB9BM,IAAAA,EAAE,EAAE;AAAA,aAAMN,GAAN;AAAA,KAhB0B;AAmB9BO,IAAAA,EAAE,EAAE;AAAA,aAAMP,GAAN;AAAA,KAnB0B;AAuB9BQ,IAAAA,EAAE,EAAE;AAAA,aAAMR,GAAN;AAAA,KAvB0B;AA2B9BS,IAAAA,EAAE,EAAE;AAAA,aAAMT,GAAN;AAAA,KA3B0B;AA+B9BU,IAAAA,CAAC,EAAE;AAAA,aAAMV,GAAN;AAAA,KA/B2B;AAkC9BW,IAAAA,IAAI,EAAE;AAAA,aAAMX,GAAN;AAAA,KAlCwB;AAqC9BY,IAAAA,MAAM,EAAE;AAAA,aAAMZ,GAAN;AAAA,KArCsB;AAyC9Ba,IAAAA,EAAE,EAAE;AAAA,aAAMb,GAAN;AAAA,KAzC0B;AA6C9Bc,IAAAA,KAAK,EAAE;AAAA,aAAMd,GAAN;AAAA;AA7CuB,IAgD9BG,OAhD8B,GAAd;AAAA,CAAlB;;AAkDA,IAAMY,IAAI,GAAGhB,MAAM,CAACW,CAAV;AAAA;AAAA;AAAA,yEAGN;AAAA,MAAGM,EAAH,QAAGA,EAAH;AAAA,SAAYA,EAAE,IAAId,SAAS,CAACc,EAAD,CAA3B;AAAA,CAHM,EAIN;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,SAAmBA,SAAS,IAAIjB,GAAJ,2BACViB,SADU,CAA5B;AAAA,CAJM,EAON;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,IAAIlB,GAAJ,uBACNkB,KADM,CAApB;AAAA,CAPM,EAUN;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,IAAInB,GAAJ,sBACLmB,IADK,CAAlB;AAAA,CAVM,EAaN;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,SAAgBA,MAAM,IAAIpB,GAAJ,wBACPoB,MADO,CAAtB;AAAA,CAbM,EAgBN;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,SAAkBA,QAAQ,KAAK,OAAb,IAAwBrB,GAAxB,4BAAlB;AAAA,CAhBM,EAmBN;AAAA,MAAGqB,QAAH,SAAGA,QAAH;AAAA,SAAkBA,QAAQ,KAAK,UAAb,IAA2BrB,GAA3B,2EAAlB;AAAA,CAnBM,CAAV;AA2BAe,IAAI,CAACO,SAAL,GAAiB;AACfN,EAAAA,EAAE,EAAEf,SAAS,CAACsB,MADC;AAEfN,EAAAA,SAAS,EAAEhB,SAAS,CAACsB,MAFN;AAGfL,EAAAA,KAAK,EAAEjB,SAAS,CAACsB;AAHF,CAAjB;AAMA,eAAeR,IAAf","sourcesContent":["import styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst textStyle = (element) => ({\n  h1: () => css`\n    font-size: 4.2rem;\n    color: var(--color-brand-1);\n    line-height: 1.2;\n    @media(min-width: 520px) {\n      font-size: 6.4rem;\n    }\n  `,\n  h2: () => css`\n    font-size: 2.8rem;\n    color: var(--color-brand-1);\n    @media(min-width: 720px) {\n      font-size: 4rem;\n    }\n  `,\n  h3: () => css`\n    font-size: 3.6rem;\n  `,\n  h4: () => css`\n    font-size: 2.8rem;\n    color: var(--color-brand-1);\n  `,\n  h5: () => css`\n    font-size: 2.2rem;\n    color: var(--color-brand-1);\n  `,\n  h6: () => css`\n    font-size: 1.8rem;\n    color: var(--color-brand-1);\n  `,\n  p: () => css`\n    font-size: 1.8rem;\n  `,\n  span: () => css`\n    margin: 0;\n  `,\n  strong: () => css`\n    margin: 0;\n    font-weight: bolder;\n  `,\n  em: () => css`\n    margin: 0;\n    font-style: italic;\n  `,\n  small: () => css`\n    font-size: 1.4rem;\n  `,\n}[element]());\n\nconst Text = styled.p`\n  margin: 1rem 0;\n  line-height: 1.5;\n  ${({ as }) => as && textStyle(as)}\n  ${({ transform }) => transform && css`\n    text-transform: ${transform};\n  `}\n  ${({ align }) => align && css`\n    text-align: ${align};\n  `}\n  ${({ size }) => size && css`\n    font-size: ${size};\n  `}\n  ${({ weight }) => weight && css`\n    font-weight: ${weight};\n  `}\n  ${({ truncate }) => truncate === 'break' && css`\n    word-break: break-word;\n  `}\n  ${({ truncate }) => truncate === 'ellipsis' && css`\n    width: 100%;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  `}\n`;\n\nText.propTypes = {\n  as: PropTypes.string,\n  transform: PropTypes.string,\n  align: PropTypes.string,\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}