{"ast":null,"code":"import styled, { css } from 'styled-components'; // 1 Dimension grids\n\nexport var Grid = styled.div.withConfig({\n  displayName: \"Grid\",\n  componentId: \"sc-19tduhj-0\"\n})([\"display:grid;\", \" \", \"\"], function (_ref) {\n  var responsive = _ref.responsive,\n      _ref$columns = _ref.columns,\n      columns = _ref$columns === void 0 ? 1 : _ref$columns;\n  return responsive !== 'fixed' && css([\"@media(min-width:720px){grid-template-columns:repeat(\", \",1fr);}@media(min-width:1020px){grid-template-columns:repeat(\", \",1fr);}@media(min-width:1240px){grid-template-columns:repeat(\", \",1fr);}\"], Math.floor(columns / 2), Math.floor(columns / 2 + 1), columns);\n}, function (_ref2) {\n  var _ref2$gap = _ref2.gap,\n      gap = _ref2$gap === void 0 ? '30px' : _ref2$gap;\n  return gap && css([\"grid-gap:\", \";\"], gap);\n});\nexport var Column = styled.div.withConfig({\n  displayName: \"Grid__Column\",\n  componentId: \"sc-19tduhj-1\"\n})([\"\"]);","map":{"version":3,"sources":["C:/Users/nike9/Documents/GitHub/website/components/Grid.jsx"],"names":["styled","css","Grid","div","responsive","columns","Math","floor","gap","Column"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B,C,CAEA;;AACA,OAAO,IAAMC,IAAI,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,+BAEb;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,0BAAeC,OAAf;AAAA,MAAeA,OAAf,6BAAyB,CAAzB;AAAA,SAAiCD,UAAU,KAAK,OAAf,IAA0BH,GAA1B,yMAECK,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,CAArB,CAFD,EAKCC,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,CAAV,GAAc,CAAzB,CALD,EAQCA,OARD,CAAjC;AAAA,CAFa,EAab;AAAA,wBAAGG,GAAH;AAAA,MAAGA,GAAH,0BAAS,MAAT;AAAA,SAAsBA,GAAG,IAAIP,GAAJ,qBACbO,GADa,CAAzB;AAAA,CAba,CAAV;AAkBP,OAAO,IAAMC,MAAM,GAAGT,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,QAAZ","sourcesContent":["import styled, { css } from 'styled-components';\n\n// 1 Dimension grids\nexport const Grid = styled.div`\n  display: grid;\n  ${({ responsive, columns = 1 }) => responsive !== 'fixed' && css`\n    @media(min-width: 720px) {\n      grid-template-columns: repeat(${Math.floor(columns / 2)}, 1fr);\n    }\n    @media(min-width: 1020px) {\n      grid-template-columns: repeat(${Math.floor(columns / 2 + 1)}, 1fr);\n    }\n    @media(min-width: 1240px) {\n      grid-template-columns: repeat(${columns}, 1fr);\n    }\n  `}\n  ${({ gap = '30px' }) => gap && css`\n    grid-gap: ${gap};\n  `}\n`;\n\nexport const Column = styled.div`\n`;\n"]},"metadata":{},"sourceType":"module"}