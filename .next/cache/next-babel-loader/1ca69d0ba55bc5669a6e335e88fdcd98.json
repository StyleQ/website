{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\n\nvar textStyle = function textStyle(element) {\n  return {\n    h1: function h1() {\n      return css([\"font-size:4.2rem;color:var(--color-brand-1);line-height:1.2;@media(min-width:520px){font-size:6.4rem;}\"]);\n    },\n    h2: function h2() {\n      return css([\"font-size:2.8rem;color:var(--color-brand-1);@media(min-width:720px){font-size:4rem;}\"]);\n    },\n    h3: function h3() {\n      return css([\"font-size:3.6rem;\"]);\n    },\n    h4: function h4() {\n      return css([\"font-size:2.8rem;color:var(--color-brand-1);\"]);\n    },\n    h5: function h5() {\n      return css([\"font-size:2.2rem;color:var(--color-brand-1);\"]);\n    },\n    h6: function h6() {\n      return css([\"font-size:1.8rem;color:var(--color-brand-1);\"]);\n    },\n    p: function p() {\n      return css([\"font-size:1.8rem;\"]);\n    },\n    span: function span() {\n      return css([\"margin:0;\"]);\n    },\n    strong: function strong() {\n      return css([\"margin:0;font-weight:bolder;\"]);\n    },\n    em: function em() {\n      return css([\"margin:0;font-style:italic;\"]);\n    },\n    small: function small() {\n      return css([\"font-size:1.4rem;\"]);\n    }\n  }[element]();\n};\n\nvar Text = styled.p.withConfig({\n  displayName: \"Typography__Text\",\n  componentId: \"bjxfwk-0\"\n})([\"margin:1rem 0;line-height:1.5;\", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], function (_ref) {\n  var as = _ref.as;\n  return as && textStyle(as);\n}, function (_ref2) {\n  var transform = _ref2.transform;\n  return transform && css([\"text-transform:\", \";\"], transform);\n}, function (_ref3) {\n  var align = _ref3.align;\n  return align && css([\"text-align:\", \";\"], align);\n}, function (_ref4) {\n  var size = _ref4.size;\n  return size && css([\"font-size:\", \";\"], size);\n}, function (_ref5) {\n  var weight = _ref5.weight;\n  return weight && css([\"font-weight:\", \";\"], weight);\n}, function (_ref6) {\n  var truncate = _ref6.truncate;\n  return truncate === 'break' && css([\"word-break:break-word;\"]);\n}, function (_ref7) {\n  var truncate = _ref7.truncate;\n  return truncate === 'ellipsis' && css([\"width:100%;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\"]);\n});\nText.propTypes = {\n  as: PropTypes.string,\n  transform: PropTypes.string,\n  align: PropTypes.string\n};\nexport default Text;","map":null,"metadata":{},"sourceType":"module"}